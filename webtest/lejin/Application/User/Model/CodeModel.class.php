<?php/** * 验证码 * @author yangdong * */namespace User\Model;use Think\Model;use Lincense\Controller\Thinkchat;use Think\Log;class CodeModel extends Model {	protected $tableName 	= 'code';	protected $pk        	= 'phone';		/**	 * 根据手机号获取验证码	 * @return array	 */	function getCode(){		$phone = I('phone');				// TODO 设置测试验证码123456		$code  = rand(100000, 999999);//		$code  = 123456;		$type  = trim(I('type', 0));//0-获取验证码 1-找回密码时获取验证码		if (!$phone) return showData(new \stdClass(), '请输入手机号', 1);		$data  = array('code'=>$code, 'createtime'=>NOW_TIME);		$map   = array('phone'=>$phone);		$db    = new \User\Model\UserModel();		if ($type){		    //重置密码		    if ($db->where($map)->count()){		        if ($this->where($map)->count()) {		            $this->where($map)->save($data);		        }else {		            $data['phone'] = $phone;		            $this->add($data);		        }		        if (self::sendMessage($code, $phone, 1)) {		            return showData(array('code'=>$code), '发送成功');		        }else {		            return showData(new \stdClass(), '发送失败，请稍侯再试！', 1);		        }		    }else {		        return showData(new \stdClass(), '该手机未注册，不能重置密码', 1);		    }		}else {		    //获取验证码		    if ($db->where($map)->count()){		        //已注册		        return showData(new \stdClass(), '该手机号已注册，可直接登录', 1);		    }else {		        $isSuccess = false;		        if ($this->where($map)->count()){		            if ($this->where($map)->save($data)) $isSuccess = true;		        }else {		            $data['phone'] = $phone;		            if ($this->add($data)) $isSuccess = true;		        }		        		        if ($isSuccess) {		            if (self::sendMessage($code, $phone)) {		                return showData(array('code'=>$code), '发送成功');		            }		        }		    }		}		return showData(new \stdClass(), '发送失败，请稍侯再试！', 1);	}	/**	 * 验证验证码	 */	function checkCode(){	    //两小时过期	    $this->where(array('createtime'=>array('lt',NOW_TIME-2*60*60)))->delete();		$phone = I('phone');		$code  = I('code');		if (!$phone) return showData(new \stdClass(), '请输入手机号', 1);		if (!$code) return showData(new \stdClass(), '请输入验证码', 1);		$info = $this->where(array('phone'=>$phone))->find();		if ($info['code'] == $code) {		    $this->where(array('phone'=>$phone))->delete();//验证成功就删除			return showData(new \stdClass(), '验证成功');		}else {			return showData(new \stdClass(), '验证码错误', 1);		}	}	/**	 * 发送短信	 */	function sendMessage($code=0, $phone=0, $type=0, $content=''){	   // return true;	    header('Content-Type:text/html; charset=utf-8');	    $uid = 'SDK-FLH-010-00211';	    $passwd = 'b2#2e-#9';	    $passwd = strtoupper(md5($uid.$passwd));	    $telphone = $phone;	    switch ($type){	        case 0:	            $message = '验证码: '.$code.',有效期2小时,请勿向任何人提供您收到的短信检验码';  	//短信内容	            break;	        case 1:	            $message = '验证码: '.$code.',你正在找回密码,需要进行检验,有效期2小时,请勿向任何人提供您收到的短信检验码';  	//短信内容	            break;	        case 2:	            $message = $content;	            break;	    }	    $message .= '【乐津科技】';	    	    //$message = iconv("gbk","utf-8",$message);//这里需要转换成gbk	    $message = urlencode($message);	   	    $gateway = "http://sdk2.entinfo.cn:8061/mdsmssend.ashx?sn=$uid&pwd=$passwd&mobile=$telphone&content=$message";	    Log::write($gateway);	     	    $result = file_get_contents($gateway);	    	    Log::write("result=" . $result);	    if(  $result>0) return true;	    return false; 	    	    	    /* $client = new \SoapClient('http://mb345.com:999/ws/LinkWS.asmx?wsdl',array('encoding'=>'UTF-8'));	    $sendParam = array(	        'CorpID'=>$uid,	        'Pwd'=>$passwd,	        'Mobile'=>$telphone,	        'Content'=>$message,	        'Cell'=>'',	        'SendTime'=>''	    );	    $result = $client->BatchSend($sendParam);	    $result = $result->BatchSendResult;	    $client = null;	    if ($result==0 || $result==1) return true;	    return false; */	}	/**	 * 重置密码	 */	function resetPassword(){	    $phone 	  = trim(I('phone'));	//手机号	    $password = trim(I('password'));//密码	    if (!$phone) return showData(new \stdClass(), '请输入手机号', 1);	    if (!$password) return showData(new \stdClass(), '请输入密码', 1);	    	    //检验验证码	    $return = self::checkCode();	    if ($return['code']) return $return;	    	    $db    = new \User\Model\UserModel();	    	    $uid = $db->where(array('phone'=>$phone))->getField('uid');	    if (!$uid) return showData(new \stdClass(), '该手机未注册', 1);	    	    if ($db->where(array('phone'=>$phone))->setField('password',md5($password)) !== false) {	        	        $thinkchat = new Thinkchat();	        $thinkchat->init(C('OP_SERVER'));	        $thinkchat->editPasswd($uid, $password);	        	        return showData(new \stdClass(), '设置成功');	    }else {	        return showData(new \stdClass(), '重设密码失败，请稍侯再试！', 1);	    }	}}